//        ObjectMapper xmlMapper = new ObjectMapper();
//        xmlMapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true); //w razie zwracania 1 paramsa moze sie przyda


//RestTemplate restTemplate = new RestTemplate();
//Greeting gret = restTemplate.getForObject("http://localhost:8080/search?phrase=entralny", Greeting.class);
//final String buduje = gret.getContent();
//dziala otrzymywanie obiektow


if(parsingResponse != null){
            Jednostka temp = parsingResponse.get(0);
            nameUnitT =  temp.getEmail().toString();
            temp = parsingResponse.get(1);
            nameUnitT += temp.getNazwa().toString();
        }
        final String nameUnit = nameUnitT;
        System.out.print(nameUnit);

        Notice that the image is stored under
        the  WEB-INFfolder, which is a special folder that is never accessible
        using an URL, unlike the other folders of a web application. This is
        a security solution - another would be to store the resource elsewhere in the file system.

        //        Panel panel = new Panel("Panel Containing a Label");
        //        panel.setWidth("300px");

        //z webservice
        //        ArrayList<Jednostka> parsingResponse = SearchPhrase.getUnitsByPhrase("iniczny");
        //        if (parsingResponse != null) {
        //        layout.addComponent(new Label(parsingResponse.get(0).getNazwa().toString()));
        //        }

nazwe out                        UI.getCurrent().addWindow(sub);

nie sypie nullem przy odznaczaniu, ale problem z ponownym wywo≈Çywniem okna        table.setNullSelectionAllowed(false);

managing SubWindow (correct opening the component)